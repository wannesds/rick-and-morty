{"version":3,"sources":["components/Card.js","components/CardList.js","components/ChangePage.js","components/Filter.js","quotes.js","components/Header.js","components/Footer.js","containers/App.js","serviceWorker.js","index.js"],"names":["Card","id","name","status","species","type","gender","location","origin","className","alt","src","CardList","chars","map","char","i","key","episode","ChangePage","prevPage","nextPage","info","pNum","url","match","onClick","disabled","prev","pages","next","Filter","getQuery","useState","setName","setStatus","setGender","onChange","e","target","value","placeholder","autocomplete","preventDefault","quotes","quote","Header","setId","useEffect","Math","trunc","random","length","Footer","href","App","results","data","setData","setUrl","isLoading","setIsLoading","isError","setIsError","a","fetch","then","response","json","res","error","fetchData","r","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.fd41fab6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id, name, status, species, type, gender, origin, location}) => {\r\n \r\n    return (\r\n        <div className='Card'>\r\n         \r\n            <img alt='Character' src={`https://rickandmortyapi.com/api/character/avatar/${id}.jpeg`}/>\r\n            \r\n            <div>\r\n                <h3>\r\n                    {name} <i>({gender})</i>\r\n                </h3>\r\n\r\n                \r\n\r\n                <h4>\r\n                    {species}\r\n                    {type && <i>*{type}*</i>}\r\n                </h4>\r\n                \r\n                <p>\r\n                    Last seen:<br/>\r\n                    <i>{location.name}</i>\r\n                </p>\r\n\r\n                {/* <p>Origin:<br></br> <h5>{origin.name}</h5></p>   */}\r\n                {status === 'Alive' ? null : <div className='DeadSign'/>}\r\n            </div>\r\n                      \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction CardList({ chars }) {\r\n    return(\r\n        <div className=\"CardList\">\r\n           { \r\n                chars.map((char, i) => {\r\n                    return(\r\n                        <Card\r\n                        key={i} \r\n                        id={chars[i].id} \r\n                        name={chars[i].name} \r\n                        status={chars[i].status}\r\n                        species={chars[i].species}\r\n                        type={chars[i].type}\r\n                        gender={chars[i].gender}\r\n                        origin={chars[i].origin}\r\n                        location={chars[i].location}\r\n                        episode={chars[i].episode}\r\n                        />\r\n                    );\r\n                })   \r\n            \r\n            \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst ChangePage = ({prevPage, nextPage, info, url}) => {\r\n    const pNum = url.match(/(\\d+)/);\r\n    return (\r\n        <div className=\"ChangePageBox\">\r\n            <button onClick={prevPage} disabled={!info.prev ? true : false}>\r\n            Prev\r\n            </button>\r\n\r\n            <p>\r\n            {pNum === null ? '1' : pNum[0]} / {info.pages}\r\n            </p>\r\n\r\n            <button onClick={nextPage}  disabled={!info.next ? true : false}>\r\n            Next\r\n            </button>\r\n        </div>     \r\n    );\r\n}\r\n\r\nexport default ChangePage;","\r\nimport React, {useState} from 'react';\r\n\r\nfunction Filter({getQuery}) {    \r\n    const [name , setName] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [gender, setGender] = useState('')\r\n  \r\n    const makeQuery = e => {\r\n        e.preventDefault()  \r\n        const query = \"?name=\" + name +\r\n                    \"&status=\" + status +\r\n                    \"&gender=\" + gender \r\n        ;\r\n        getQuery(query) //query data gets send back to parent\r\n    }\r\n    return (\r\n        <form>\r\n            <input \r\n                name=\"name\" \r\n                type='search' \r\n                onChange={e => setName(e.target.value)} \r\n                placeholder='search by name'\r\n                autocomplete=\"off\"\r\n            />\r\n\r\n            <select name=\"gender\" onChange={e => setGender(e.target.value)}>\r\n                <option value=\"\">-</option>\r\n                <option value=\"male\">male</option>\r\n                <option value=\"female\">female</option>\r\n            </select>\r\n\r\n            <select name=\"status\" onChange={e => setStatus(e.target.value)}>\r\n                <option value=\"\">-</option>\r\n                <option value=\"alive\">alive</option>\r\n                <option value=\"dead\">dead</option>\r\n            </select>\r\n\r\n            <button onClick={makeQuery} type=\"submit\"></button>\r\n        </form>\r\n\r\n    );\r\n}\r\n  // const nameRef = useRef()\r\n    // const statusRef = useRef()\r\n    // const genderRef = useRef()\r\n    // const queryRef = useRef()\r\n\r\n    // useEffect(() => {\r\n    //     setQuery(\r\n    //             \"?name=\" + name +\r\n    //             \"&status=\" + status +\r\n    //             \"&gender=\" + gender\r\n    //             );\r\n    // }, [name, gender, status])\r\n\r\n// class Filter extends Component { //get all species and locations from main api to put in form\r\n//     constructor() {\r\n        \r\n//         super();\r\n//         this.state = {\r\n//             query: '',\r\n//             name: '',\r\n//             status: '',\r\n//             gender: ''\r\n//         }  \r\n//         this.handleChange = this.handleChange.bind(this);\r\n//         this.submitChange = this.submitChange.bind(this);\r\n//     }\r\n//     handleChange = (event) => {\r\n//         let nam = event.target.name;\r\n//         let val = event.target.value;\r\n//         this.setState({[nam]: val});\r\n       \r\n//         console.log(1 + this.state.status + this.state.gender + event.target.value + event.target.name);\r\n//         this.submitChange();\r\n       \r\n//     }\r\n//     submitChange() {\r\n//         this.setState({query: \r\n//             \"name=\" + this.state.name\r\n//             + \"&status=\" + this.state.status\r\n//             + \"&gender=\" + this.state.gender});\r\n//         this.props.onUpdate(this.state.query);\r\n\r\n//         console.log(this.state.status + this.state.gender);\r\n//     }\r\n\r\n\r\n    \r\n\r\n// render() {console.log(\"q test:\" + this.state.query);\r\n//     return (\r\n        \r\n//         <form>\r\n//             <input name=\"name\" type='text' placeholder='search by name' onChange={this.handleChange}/>\r\n//             <select name=\"status\" onChange={(e) => this.handleChange(e)}>\r\n//                 <option value=\"\">-</option>\r\n//                 <option value=\"alive\">Alive</option>\r\n//                 <option value=\"dead\">Dead</option>\r\n//             </select>\r\n//             <select name=\"gender\" onChange={this.handleChange}>\r\n//                 <option value=\"\">-</option>\r\n//                 <option value=\"male\">Male</option>\r\n//                 <option value=\"female\">Female</option>\r\n//             </select>\r\n//             <button onClick={this.submitChange}>Wubba Lubba Dub Dub</button>\r\n//         </form>\r\n//     );\r\n//     }\r\n// }\r\n\r\nexport default Filter;\r\n","export const quotes = [\r\n    {\r\n        id: 1,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“Your parents are a bag of dicks.”\",        \r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Summer Smith\",\r\n        quote: \"“If I die, don't eat my ass that'd be weird.”\",\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Summer Smith\",\r\n        quote: \"“Camping is just being homeless without the change.”\",\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“Isn't it obvious Morty? I fucked a planet.”\",\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“Stealing stuff is about the stuff, not the stealing.”\",\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Summer Smith\",\r\n        quote: \"“I going to daughter your brains out, bitch.”\",\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Morty Smith\",\r\n        quote: \"“Must... continue... moving... in... ways... that... lead... to... dying... with... you.”\",\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“There's a lesson here and I'm not going to be the one to figure it out.”\",\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“I've got an emo streak. It's part of what makes me so rad.”\",\r\n    },\r\n    {\r\n        id: 10,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“Wait for the ramp, Morty. They love the slow ramp. It really gets their dicks hard”\",\r\n    },\r\n    {\r\n        id: 11,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“I can't wait to watch your adventure lay a huge fart.”\",\r\n    },\r\n    {\r\n        id: 12,\r\n        name: \"Morty Smith\",\r\n        quote: \"“I masturbated to an extra curvy piece of driftwood the other day!”\",\r\n    },\r\n    {\r\n        id: 13,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“Morty, you gotta flip 'em off. I told them it means 'peace among worlds.' How hilarious is that!”\",\r\n    },\r\n    {\r\n        id: 14,\r\n        name: \"Summer Smith\",\r\n        quote: \"“You're the little brother. You're not the cause of your parents' misery, you're just a symptom of it.”\",\r\n    },\r\n    {\r\n        id: 15,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“Put a saddle on your universe. Let it kick itself out.”\",\r\n    },\r\n    {\r\n        id: 16,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“You got some of that mermaid puss.”\",\r\n    },\r\n    {\r\n        id: 17,\r\n        name: \"Pickle Rick\",\r\n        quote: \"“I'M A PICKLE! I'm pickle Riiiiiick!”\",\r\n    },\r\n    {\r\n        id: 18,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“Yeah, well, tough titties.”\",\r\n    },\r\n    {\r\n        id: 19,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“Don't break an arm jerking yourself off, Morty.”\",\r\n    },\r\n    {\r\n        id: 20,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“To live is to risk it all, otherwise you're just an inert chunk of randomly assembled molecules drifting wherever the universe blows you.”\",\r\n    },\r\n    {\r\n        id: 21,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“Get off the high road, Summer! We all got pinkeye because you won't stop texting on the toilet.”\",\r\n    },\r\n    {\r\n        id: 22,\r\n        name: \"Wannes Dieltiens\",\r\n        quote: \"“The future of blockchain has never looked so bright, HODL!”\",\r\n    },\r\n    {\r\n        id: 23,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“Well, I don't like your unemployed genes in my grandchildren, Jerry, but life is made of little concessions.”\",\r\n    },\r\n    {\r\n        id: 24,\r\n        name: \"Morty Jr.\",\r\n        quote: \"“The government's lame! Thanksgiving is about killing Indians! Jesus wasn't born on Christmas! They moved the date, it was a pagan holiday!”\",\r\n    },\r\n    {\r\n        id: 25,\r\n        name: \"Rick Sanchez\",\r\n        quote: \"“Get Schwifty.”\",\r\n    },\r\n    {\r\n        id: 26,\r\n        name: \"Morty Smith\",\r\n        quote: \"“Get Schwifty.”\",\r\n    }\r\n]","import React, {useEffect, useState} from 'react';\r\nimport  {quotes} from '../quotes.js';\r\n\r\n\r\nfunction Header({url}) {\r\n    const [id, setId] = useState(1);\r\n\r\n    useEffect(() => {\r\n        setId(Math.trunc(Math.random() * quotes.length))\r\n    }, [url]);\r\n\r\n    return (\r\n        <div className=\"QuoteBox\">\r\n            <p className=\"f3 i\">{quotes[id].quote}</p>\r\n            {/* <img className=\"\" alt='Character' src={quotes[id].picture} width='50px'/> */}\r\n            <p className=\"f5\">- {quotes[id].name}</p>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n\r\n    return(\r\n        <div className=\"FooterBox\">        \r\n            <p>\r\n                by <a href=\"https://github.com/wannesds\">Wannes Dieltiens</a> 2020\r\n            </p>\r\n\r\n            <p>\r\n                Thanks to <a href=\"https://rickandmortyapi.com\">rickandmortyapi.com</a>\r\n                 {/* and <a href=\"https://deviantart.com/sawuinhaff\">Eric Sawuinhaff</a> (art) */}\r\n            </p>\r\n        </div>\r\n        /* should change in <a hrefs */\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useEffect, useState } from 'react';\r\n// import './App.css'; /*delete when done w moving over css to sass*/ \r\nimport './App.scss';\r\nimport CardList from '../components/CardList';\r\nimport ChangePage from '../components/ChangePage';\r\n// import ErrorBoundry from '../components/ErrorBoundry';\r\nimport Filter from '../components/Filter';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({results: [], info: []})\r\n  const [url, setUrl] = useState('https://rickandmortyapi.com/api/character/')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isError, setIsError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true)\r\n      setIsError(false)\r\n      try {\r\n        fetch(url)\r\n          .then(response => response.json())\r\n          .then(res => setData(res))\r\n      } catch (error) {\r\n        setIsError(true)\r\n      } \r\n      setIsLoading(false)\r\n    }\r\n    fetchData()\r\n  },[url])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"HeaderBox\">\r\n        <Header url={url}/>\r\n        <Filter getQuery={(r) => setUrl(`https://rickandmortyapi.com/api/character/${r}`)}/>\r\n      </div>\r\n      \r\n\r\n      {/* check first if loading, then check if error, then show content */}\r\n      { isLoading ? <div className=\"ErrorBox\">Loading ...</div> : \r\n        data.error || isError ? <div className=\"ErrorBox\">You fucked up Morty!</div> :\r\n          <content>\r\n\r\n            <ChangePage \r\n              prevPage={() => setUrl(data.info.prev)} \r\n              nextPage={() => setUrl(data.info.next)}\r\n              info={data.info}\r\n              url={url}\r\n            />\r\n\r\n            <CardList  chars={data.results}/>\r\n\r\n            <ChangePage \r\n              prevPage={() => setUrl(data.info.prev)} \r\n              nextPage={() => setUrl(data.info.next)}\r\n              info={data.info}\r\n              url={url}\r\n            />\r\n          </content>     \r\n      }\r\n\r\n      <Footer/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n//OLD CODE \r\n// class App extends Component {\r\n//   constructor() {\r\n//     super ()\r\n//     this.state = {\r\n//       chars: [], \r\n//       info: [], \r\n//       fPage: '', // Future Page\r\n//       page: 1,  // Current Page (by default 1)\r\n//       query: '',\r\n//       quotes: quotes\r\n//     }\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     fetch('https://rickandmortyapi.com/api/character/')\r\n//       .then(response => response.json())\r\n//       .then(character => this.setState({ chars: character.results, info: character.info}));\r\n\r\n//     // fetch('../quotes.js')\r\n//     //   .then(response => response.json())\r\n//     //   .then(quotes => this.setState({ quotes: quotes}));\r\n//     //  // default fetch\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {//use useEffect!!!\r\n//     const {fPage, page, info} = this.state;\r\n\r\n//     if (prevState.fPage !== fPage) { //check for changes\r\n//       if (fPage === info.prev) { //changes current page before new fetch\r\n//         this.setState({page: page - 1})\r\n//       } else {\r\n//         this.setState({page: page + 1})\r\n//       }\r\n\r\n//       fetch(fPage)\r\n//       .then(response => response.json())\r\n//       .then(character => this.setState({ chars: character.results, info: character.info}));  \r\n//     }\r\n\r\n//     if (this.state.query !== '') { //gives error when useing name that does not occur in any characters, catcherror\r\n//       fetch(\"https://rickandmortyapi.com/api/character/\" + this.state.query)\r\n//       .then(response => response.json())\r\n//       .then(character => this.setState({ chars: character.results, info: character.info}));\r\n//       this.setState({query: ''})\r\n//     }\r\n//   }\r\n\r\n//   // onFilterSubmit(fullQuery) {\r\n    \r\n//   // }\r\n\r\n//   // onSubmit = (e) => {\r\n//   //   e.preventDefault()\r\n//   //   this.setState({testdata: new FormData(e.target)});\r\n//   // }\r\n\r\n\r\n//   render() {\r\n//     const {chars, page, info, quotes, fullQuery} = this.state;\r\n\r\n//     console.log(quotes[1])\r\n//     return (\r\n//       <fragment>\r\n\r\n//       <header>\r\n//         <div>\r\n//           <p>{quotes[1].quote}</p>\r\n//           <h5>- {quotes[1].name}</h5>\r\n//         </div>\r\n//       </header>\r\n//       <div>\r\n//         <Filter onSubmit={() => this.setState({query: fullQuery})}/>\r\n//         <ChangePage \r\n//           prevPage={() => this.setState({fPage: info.prev})} \r\n//           nextPage={() => this.setState({fPage: info.next})}\r\n//           info={info}\r\n//         />\r\n//         <h2>page: {page}/{info.pages}</h2>\r\n\r\n//         <h2>{this.state.testdata}</h2>\r\n\r\n//         <ErrorBoundry>\r\n//         <Suspense fallback={<div>Oops Something went wrong!</div>}>\r\n//           <CardList chars={chars}/>\r\n//         </Suspense>\r\n//         </ErrorBoundry> \r\n//       </div>\r\n\r\n//       </fragment>\r\n//     );\r\n//   }\r\n\r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}